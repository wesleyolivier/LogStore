// <auto-generated />
using System;
using HungryPizza.MinhaApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HungryPizza.MinhaApi.Migrations
{
    [DbContext(typeof(MeuAppDbContext))]
    partial class MeuAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnderecoEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.PizzaSaborEscolhido", b =>
                {
                    b.Property<int>("PizzaSaborEscolhidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaSaborEscolhidoId"), 1L, 1);

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("SaborId")
                        .HasColumnType("int");

                    b.HasKey("PizzaSaborEscolhidoId");

                    b.HasIndex("PizzaId");

                    b.HasIndex("SaborId");

                    b.ToTable("PizzaSaboresEscolhidos");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Sabor", b =>
                {
                    b.Property<int>("SaborId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaborId"), 1L, 1);

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaborId");

                    b.ToTable("Sabores");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pedido", b =>
                {
                    b.HasOne("HungryPizza.MinhaApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pizza", b =>
                {
                    b.HasOne("HungryPizza.MinhaApi.Models.Pedido", "Pedido")
                        .WithMany("Pizzas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.PizzaSaborEscolhido", b =>
                {
                    b.HasOne("HungryPizza.MinhaApi.Models.Pizza", "Pizza")
                        .WithMany("Sabores")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HungryPizza.MinhaApi.Models.Sabor", "Sabor")
                        .WithMany("PizzaSabor")
                        .HasForeignKey("SaborId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Sabor");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pedido", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Pizza", b =>
                {
                    b.Navigation("Sabores");
                });

            modelBuilder.Entity("HungryPizza.MinhaApi.Models.Sabor", b =>
                {
                    b.Navigation("PizzaSabor");
                });
#pragma warning restore 612, 618
        }
    }
}
